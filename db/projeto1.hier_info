|processador
clk => fetch:fetch.clk
clk => arquitetura:arquitetura.clk
in_MuxRAM[0] => arquitetura:arquitetura.in_Mux_Ram[0]
in_MuxRAM[1] => arquitetura:arquitetura.in_Mux_Ram[1]
in_MuxRAM[2] => arquitetura:arquitetura.in_Mux_Ram[2]
in_MuxRAM[3] => arquitetura:arquitetura.in_Mux_Ram[3]
in_MuxRAM[4] => arquitetura:arquitetura.in_Mux_Ram[4]
in_MuxRAM[5] => arquitetura:arquitetura.in_Mux_Ram[5]
in_MuxRAM[6] => arquitetura:arquitetura.in_Mux_Ram[6]
in_MuxRAM[7] => arquitetura:arquitetura.in_Mux_Ram[7]
out_memReg[0] <= arquitetura:arquitetura.out_memReg[0]
out_memReg[1] <= arquitetura:arquitetura.out_memReg[1]
out_memReg[2] <= arquitetura:arquitetura.out_memReg[2]
out_memReg[3] <= arquitetura:arquitetura.out_memReg[3]
out_memReg[4] <= arquitetura:arquitetura.out_memReg[4]
out_memReg[5] <= arquitetura:arquitetura.out_memReg[5]
out_memReg[6] <= arquitetura:arquitetura.out_memReg[6]
out_memReg[7] <= arquitetura:arquitetura.out_memReg[7]
out_addrImediato[0] <= fetch:fetch.out_instrucao[0]
out_addrImediato[1] <= fetch:fetch.out_instrucao[1]
out_addrImediato[2] <= fetch:fetch.out_instrucao[2]
out_addrImediato[3] <= fetch:fetch.out_instrucao[3]
out_addrImediato[4] <= fetch:fetch.out_instrucao[4]
out_addrImediato[5] <= fetch:fetch.out_instrucao[5]
out_addrImediato[6] <= fetch:fetch.out_instrucao[6]
out_addrImediato[7] <= fetch:fetch.out_instrucao[7]
out_addrImediato[8] <= fetch:fetch.out_instrucao[8]
out_addrImediato[9] <= fetch:fetch.out_instrucao[9]
out_habLeiMEM <= uc:UC.habilitaLeitutaMEM
out_habEscMEM <= uc:UC.habilitaEscritaMEM


|processador|UC:UC
opcode[0] => Equal0.IN1
opcode[0] => Equal1.IN3
opcode[0] => Equal2.IN3
opcode[0] => Equal3.IN1
opcode[0] => Equal4.IN3
opcode[0] => Equal5.IN3
opcode[0] => Equal6.IN1
opcode[0] => Equal7.IN3
opcode[0] => Equal8.IN3
opcode[0] => Equal9.IN3
opcode[0] => Equal10.IN2
opcode[0] => Equal11.IN3
opcode[0] => Equal12.IN2
opcode[0] => Equal13.IN2
opcode[0] => Equal14.IN3
opcode[1] => Equal0.IN3
opcode[1] => Equal1.IN1
opcode[1] => Equal2.IN2
opcode[1] => Equal3.IN3
opcode[1] => Equal4.IN2
opcode[1] => Equal5.IN0
opcode[1] => Equal6.IN0
opcode[1] => Equal7.IN2
opcode[1] => Equal8.IN1
opcode[1] => Equal9.IN2
opcode[1] => Equal10.IN1
opcode[1] => Equal11.IN2
opcode[1] => Equal12.IN1
opcode[1] => Equal13.IN3
opcode[1] => Equal14.IN2
opcode[2] => Equal0.IN2
opcode[2] => Equal1.IN2
opcode[2] => Equal2.IN1
opcode[2] => Equal3.IN0
opcode[2] => Equal4.IN0
opcode[2] => Equal5.IN2
opcode[2] => Equal6.IN3
opcode[2] => Equal7.IN1
opcode[2] => Equal8.IN0
opcode[2] => Equal9.IN1
opcode[2] => Equal10.IN3
opcode[2] => Equal11.IN1
opcode[2] => Equal12.IN0
opcode[2] => Equal13.IN1
opcode[2] => Equal14.IN1
opcode[3] => Equal0.IN0
opcode[3] => Equal1.IN0
opcode[3] => Equal2.IN0
opcode[3] => Equal3.IN2
opcode[3] => Equal4.IN1
opcode[3] => Equal5.IN1
opcode[3] => Equal6.IN2
opcode[3] => Equal7.IN0
opcode[3] => Equal8.IN2
opcode[3] => Equal9.IN0
opcode[3] => Equal10.IN0
opcode[3] => Equal11.IN0
opcode[3] => Equal12.IN3
opcode[3] => Equal13.IN0
opcode[3] => Equal14.IN0
operacao[0] <= operacao[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
operacao[1] <= operacao[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
operacao[2] <= operacao[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
muxJump <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
jumpEqual <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
muxImediatoRAM <= Equal7.DB_MAX_OUTPUT_PORT_TYPE
habilitaResgistrador <= habilitaResgistrador.DB_MAX_OUTPUT_PORT_TYPE
habilitaFlag <= Equal10.DB_MAX_OUTPUT_PORT_TYPE
habilitaLeitutaMEM <= Equal7.DB_MAX_OUTPUT_PORT_TYPE
habilitaEscritaMEM <= Equal2.DB_MAX_OUTPUT_PORT_TYPE


|processador|fetch:fetch
clk => registradorgenerico:registerPC.CLK
flag => sel_MuxPC.IN0
jumpEqual => sel_MuxPC.IN1
selMuxJump => sel_MuxPC.IN1
out_instrucao[0] <= memoriarom:ROM.Dado[0]
out_instrucao[1] <= memoriarom:ROM.Dado[1]
out_instrucao[2] <= memoriarom:ROM.Dado[2]
out_instrucao[3] <= memoriarom:ROM.Dado[3]
out_instrucao[4] <= memoriarom:ROM.Dado[4]
out_instrucao[5] <= memoriarom:ROM.Dado[5]
out_instrucao[6] <= memoriarom:ROM.Dado[6]
out_instrucao[7] <= memoriarom:ROM.Dado[7]
out_instrucao[8] <= memoriarom:ROM.Dado[8]
out_instrucao[9] <= memoriarom:ROM.Dado[9]
out_instrucao[10] <= memoriarom:ROM.Dado[10]
out_instrucao[11] <= memoriarom:ROM.Dado[11]
out_instrucao[12] <= memoriarom:ROM.Dado[12]
out_instrucao[13] <= memoriarom:ROM.Dado[13]
out_instrucao[14] <= memoriarom:ROM.Dado[14]
out_instrucao[15] <= memoriarom:ROM.Dado[15]
out_instrucao[16] <= memoriarom:ROM.Dado[16]
pinoTeste[0] <= registradorgenerico:registerPC.DOUT[0]
pinoTeste[1] <= registradorgenerico:registerPC.DOUT[1]
pinoTeste[2] <= registradorgenerico:registerPC.DOUT[2]
pinoTeste[3] <= registradorgenerico:registerPC.DOUT[3]
pinoTeste[4] <= registradorgenerico:registerPC.DOUT[4]
pinoTeste[5] <= registradorgenerico:registerPC.DOUT[5]
pinoTeste[6] <= registradorgenerico:registerPC.DOUT[6]
pinoTeste[7] <= registradorgenerico:registerPC.DOUT[7]
pinoTeste[8] <= registradorgenerico:registerPC.DOUT[8]
pinoTeste[9] <= registradorgenerico:registerPC.DOUT[9]


|processador|fetch:fetch|muxGenerico2x1:muxPC
entradaA_MUX[0] => saida_MUX.DATAA
entradaA_MUX[1] => saida_MUX.DATAA
entradaA_MUX[2] => saida_MUX.DATAA
entradaA_MUX[3] => saida_MUX.DATAA
entradaA_MUX[4] => saida_MUX.DATAA
entradaA_MUX[5] => saida_MUX.DATAA
entradaA_MUX[6] => saida_MUX.DATAA
entradaA_MUX[7] => saida_MUX.DATAA
entradaA_MUX[8] => saida_MUX.DATAA
entradaA_MUX[9] => saida_MUX.DATAA
entradaB_MUX[0] => saida_MUX.DATAB
entradaB_MUX[1] => saida_MUX.DATAB
entradaB_MUX[2] => saida_MUX.DATAB
entradaB_MUX[3] => saida_MUX.DATAB
entradaB_MUX[4] => saida_MUX.DATAB
entradaB_MUX[5] => saida_MUX.DATAB
entradaB_MUX[6] => saida_MUX.DATAB
entradaB_MUX[7] => saida_MUX.DATAB
entradaB_MUX[8] => saida_MUX.DATAB
entradaB_MUX[9] => saida_MUX.DATAB
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
saida_MUX[0] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[1] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[2] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[3] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[4] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[5] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[6] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[7] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[8] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[9] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE


|processador|fetch:fetch|somaConstante:somPC
entrada[0] => Add0.IN20
entrada[1] => Add0.IN19
entrada[2] => Add0.IN18
entrada[3] => Add0.IN17
entrada[4] => Add0.IN16
entrada[5] => Add0.IN15
entrada[6] => Add0.IN14
entrada[7] => Add0.IN13
entrada[8] => Add0.IN12
entrada[9] => Add0.IN11
saida[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[8] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[9] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|processador|fetch:fetch|registradorGenerico:registerPC
DIN[0] => DOUT[0]~reg0.DATAIN
DIN[1] => DOUT[1]~reg0.DATAIN
DIN[2] => DOUT[2]~reg0.DATAIN
DIN[3] => DOUT[3]~reg0.DATAIN
DIN[4] => DOUT[4]~reg0.DATAIN
DIN[5] => DOUT[5]~reg0.DATAIN
DIN[6] => DOUT[6]~reg0.DATAIN
DIN[7] => DOUT[7]~reg0.DATAIN
DIN[8] => DOUT[8]~reg0.DATAIN
DIN[9] => DOUT[9]~reg0.DATAIN
DOUT[0] <= DOUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[4] <= DOUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[5] <= DOUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[6] <= DOUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[7] <= DOUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[8] <= DOUT[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[9] <= DOUT[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ENABLE => DOUT[9]~reg0.ENA
ENABLE => DOUT[8]~reg0.ENA
ENABLE => DOUT[7]~reg0.ENA
ENABLE => DOUT[6]~reg0.ENA
ENABLE => DOUT[5]~reg0.ENA
ENABLE => DOUT[4]~reg0.ENA
ENABLE => DOUT[3]~reg0.ENA
ENABLE => DOUT[2]~reg0.ENA
ENABLE => DOUT[1]~reg0.ENA
ENABLE => DOUT[0]~reg0.ENA
CLK => DOUT[0]~reg0.CLK
CLK => DOUT[1]~reg0.CLK
CLK => DOUT[2]~reg0.CLK
CLK => DOUT[3]~reg0.CLK
CLK => DOUT[4]~reg0.CLK
CLK => DOUT[5]~reg0.CLK
CLK => DOUT[6]~reg0.CLK
CLK => DOUT[7]~reg0.CLK
CLK => DOUT[8]~reg0.CLK
CLK => DOUT[9]~reg0.CLK
RST => DOUT[0]~reg0.ACLR
RST => DOUT[1]~reg0.ACLR
RST => DOUT[2]~reg0.ACLR
RST => DOUT[3]~reg0.ACLR
RST => DOUT[4]~reg0.ACLR
RST => DOUT[5]~reg0.ACLR
RST => DOUT[6]~reg0.ACLR
RST => DOUT[7]~reg0.ACLR
RST => DOUT[8]~reg0.ACLR
RST => DOUT[9]~reg0.ACLR


|processador|fetch:fetch|memoriaROM:ROM
Endereco[0] => memROM.RADDR
Endereco[1] => memROM.RADDR1
Endereco[2] => memROM.RADDR2
Endereco[3] => memROM.RADDR3
Endereco[4] => memROM.RADDR4
Endereco[5] => memROM.RADDR5
Endereco[6] => memROM.RADDR6
Endereco[7] => memROM.RADDR7
Endereco[8] => memROM.RADDR8
Endereco[9] => memROM.RADDR9
Dado[0] <= memROM.DATAOUT
Dado[1] <= memROM.DATAOUT1
Dado[2] <= memROM.DATAOUT2
Dado[3] <= memROM.DATAOUT3
Dado[4] <= memROM.DATAOUT4
Dado[5] <= memROM.DATAOUT5
Dado[6] <= memROM.DATAOUT6
Dado[7] <= memROM.DATAOUT7
Dado[8] <= memROM.DATAOUT8
Dado[9] <= memROM.DATAOUT9
Dado[10] <= memROM.DATAOUT10
Dado[11] <= memROM.DATAOUT11
Dado[12] <= memROM.DATAOUT12
Dado[13] <= memROM.DATAOUT13
Dado[14] <= memROM.DATAOUT14
Dado[15] <= memROM.DATAOUT15
Dado[16] <= memROM.DATAOUT16


|processador|arquitetura:arquitetura
clk => bancoregistradoresarqregmem:memReg.clk
in_Mux_Ram[0] => muxgenerico2x1:muxInstRAM.entradaA_MUX[0]
in_Mux_Ram[1] => muxgenerico2x1:muxInstRAM.entradaA_MUX[1]
in_Mux_Ram[2] => muxgenerico2x1:muxInstRAM.entradaA_MUX[2]
in_Mux_Ram[3] => muxgenerico2x1:muxInstRAM.entradaA_MUX[3]
in_Mux_Ram[4] => muxgenerico2x1:muxInstRAM.entradaA_MUX[4]
in_Mux_Ram[5] => muxgenerico2x1:muxInstRAM.entradaA_MUX[5]
in_Mux_Ram[6] => muxgenerico2x1:muxInstRAM.entradaA_MUX[6]
in_Mux_Ram[7] => muxgenerico2x1:muxInstRAM.entradaA_MUX[7]
instrucao[0] => muxgenerico2x1:muxInstRAM.entradaB_MUX[0]
instrucao[0] => bancoregistradoresarqregmem:memReg.endereco[0]
instrucao[1] => muxgenerico2x1:muxInstRAM.entradaB_MUX[1]
instrucao[1] => bancoregistradoresarqregmem:memReg.endereco[1]
instrucao[2] => muxgenerico2x1:muxInstRAM.entradaB_MUX[2]
instrucao[2] => bancoregistradoresarqregmem:memReg.endereco[2]
instrucao[3] => muxgenerico2x1:muxInstRAM.entradaB_MUX[3]
instrucao[4] => muxgenerico2x1:muxInstRAM.entradaB_MUX[4]
instrucao[5] => muxgenerico2x1:muxInstRAM.entradaB_MUX[5]
instrucao[6] => muxgenerico2x1:muxInstRAM.entradaB_MUX[6]
instrucao[7] => muxgenerico2x1:muxInstRAM.entradaB_MUX[7]
instrucao[8] => ~NO_FANOUT~
instrucao[9] => ~NO_FANOUT~
instrucao[10] => ~NO_FANOUT~
instrucao[11] => ~NO_FANOUT~
instrucao[12] => ~NO_FANOUT~
instrucao[13] => ~NO_FANOUT~
instrucao[14] => ~NO_FANOUT~
instrucao[15] => ~NO_FANOUT~
instrucao[16] => ~NO_FANOUT~
sel_MuxInstRAM => muxgenerico2x1:muxInstRAM.seletor_MUX
hab_memReg => bancoregistradoresarqregmem:memReg.habilitaEscrita
op_ULA[0] => ula:ULA.seletor[0]
op_ULA[1] => ula:ULA.seletor[1]
op_ULA[2] => ula:ULA.seletor[2]
hab_flag => flag:flag.hab_flag
out_memReg[0] <= bancoregistradoresarqregmem:memReg.saida[0]
out_memReg[1] <= bancoregistradoresarqregmem:memReg.saida[1]
out_memReg[2] <= bancoregistradoresarqregmem:memReg.saida[2]
out_memReg[3] <= bancoregistradoresarqregmem:memReg.saida[3]
out_memReg[4] <= bancoregistradoresarqregmem:memReg.saida[4]
out_memReg[5] <= bancoregistradoresarqregmem:memReg.saida[5]
out_memReg[6] <= bancoregistradoresarqregmem:memReg.saida[6]
out_memReg[7] <= bancoregistradoresarqregmem:memReg.saida[7]
out_flag <= flag:flag.out_flag


|processador|arquitetura:arquitetura|muxGenerico2x1:muxInstRAM
entradaA_MUX[0] => saida_MUX.DATAA
entradaA_MUX[1] => saida_MUX.DATAA
entradaA_MUX[2] => saida_MUX.DATAA
entradaA_MUX[3] => saida_MUX.DATAA
entradaA_MUX[4] => saida_MUX.DATAA
entradaA_MUX[5] => saida_MUX.DATAA
entradaA_MUX[6] => saida_MUX.DATAA
entradaA_MUX[7] => saida_MUX.DATAA
entradaB_MUX[0] => saida_MUX.DATAB
entradaB_MUX[1] => saida_MUX.DATAB
entradaB_MUX[2] => saida_MUX.DATAB
entradaB_MUX[3] => saida_MUX.DATAB
entradaB_MUX[4] => saida_MUX.DATAB
entradaB_MUX[5] => saida_MUX.DATAB
entradaB_MUX[6] => saida_MUX.DATAB
entradaB_MUX[7] => saida_MUX.DATAB
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
saida_MUX[0] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[1] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[2] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[3] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[4] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[5] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[6] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[7] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE


|processador|arquitetura:arquitetura|bancoRegistradoresArqRegMem:memReg
clk => ~NO_FANOUT~
endereco[0] => ~NO_FANOUT~
endereco[1] => ~NO_FANOUT~
endereco[2] => ~NO_FANOUT~
dadoEscrita[0] => ~NO_FANOUT~
dadoEscrita[1] => ~NO_FANOUT~
dadoEscrita[2] => ~NO_FANOUT~
dadoEscrita[3] => ~NO_FANOUT~
dadoEscrita[4] => ~NO_FANOUT~
dadoEscrita[5] => ~NO_FANOUT~
dadoEscrita[6] => ~NO_FANOUT~
dadoEscrita[7] => ~NO_FANOUT~
habilitaEscrita => ~NO_FANOUT~
saida[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
saida[1] <= saida[1].DB_MAX_OUTPUT_PORT_TYPE
saida[2] <= saida[2].DB_MAX_OUTPUT_PORT_TYPE
saida[3] <= saida[3].DB_MAX_OUTPUT_PORT_TYPE
saida[4] <= saida[4].DB_MAX_OUTPUT_PORT_TYPE
saida[5] <= saida[5].DB_MAX_OUTPUT_PORT_TYPE
saida[6] <= saida[6].DB_MAX_OUTPUT_PORT_TYPE
saida[7] <= saida[7].DB_MAX_OUTPUT_PORT_TYPE


|processador|arquitetura:arquitetura|ULA:ULA
entradaA[0] => Add0.IN8
entradaA[0] => Add1.IN16
entradaA[0] => op_and[0].IN0
entradaA[0] => op_or[0].IN0
entradaA[0] => op_xor[0].IN0
entradaA[0] => saidaOut.DATAA
entradaA[0] => saidaOut.DATAB
entradaA[0] => saidaOut.DATAB
entradaA[1] => Add0.IN7
entradaA[1] => Add1.IN15
entradaA[1] => op_and[1].IN0
entradaA[1] => op_or[1].IN0
entradaA[1] => op_xor[1].IN0
entradaA[1] => saidaOut.DATAA
entradaA[1] => saidaOut.DATAB
entradaA[1] => saidaOut.DATAB
entradaA[2] => Add0.IN6
entradaA[2] => Add1.IN14
entradaA[2] => op_and[2].IN0
entradaA[2] => op_or[2].IN0
entradaA[2] => op_xor[2].IN0
entradaA[2] => saidaOut.DATAA
entradaA[2] => saidaOut.DATAB
entradaA[2] => saidaOut.DATAB
entradaA[3] => Add0.IN5
entradaA[3] => Add1.IN13
entradaA[3] => op_and[3].IN0
entradaA[3] => op_or[3].IN0
entradaA[3] => op_xor[3].IN0
entradaA[3] => saidaOut.DATAA
entradaA[3] => saidaOut.DATAB
entradaA[3] => saidaOut.DATAB
entradaA[4] => Add0.IN4
entradaA[4] => Add1.IN12
entradaA[4] => op_and[4].IN0
entradaA[4] => op_or[4].IN0
entradaA[4] => op_xor[4].IN0
entradaA[4] => saidaOut.DATAA
entradaA[4] => saidaOut.DATAB
entradaA[4] => saidaOut.DATAB
entradaA[5] => Add0.IN3
entradaA[5] => Add1.IN11
entradaA[5] => op_and[5].IN0
entradaA[5] => op_or[5].IN0
entradaA[5] => op_xor[5].IN0
entradaA[5] => saidaOut.DATAA
entradaA[5] => saidaOut.DATAB
entradaA[5] => saidaOut.DATAB
entradaA[6] => Add0.IN2
entradaA[6] => Add1.IN10
entradaA[6] => op_and[6].IN0
entradaA[6] => op_or[6].IN0
entradaA[6] => op_xor[6].IN0
entradaA[6] => saidaOut.DATAA
entradaA[6] => saidaOut.DATAB
entradaA[6] => saidaOut.DATAB
entradaA[7] => Add0.IN1
entradaA[7] => Add1.IN9
entradaA[7] => op_and[7].IN0
entradaA[7] => op_or[7].IN0
entradaA[7] => op_xor[7].IN0
entradaA[7] => saidaOut.DATAA
entradaA[7] => saidaOut.DATAB
entradaA[7] => saidaOut.DATAB
entradaB[0] => Add0.IN16
entradaB[0] => op_and[0].IN1
entradaB[0] => op_or[0].IN1
entradaB[0] => op_xor[0].IN1
entradaB[0] => saidaOut.DATAB
entradaB[0] => Add1.IN8
entradaB[1] => Add0.IN15
entradaB[1] => op_and[1].IN1
entradaB[1] => op_or[1].IN1
entradaB[1] => op_xor[1].IN1
entradaB[1] => saidaOut.DATAB
entradaB[1] => Add1.IN7
entradaB[2] => Add0.IN14
entradaB[2] => op_and[2].IN1
entradaB[2] => op_or[2].IN1
entradaB[2] => op_xor[2].IN1
entradaB[2] => saidaOut.DATAB
entradaB[2] => Add1.IN6
entradaB[3] => Add0.IN13
entradaB[3] => op_and[3].IN1
entradaB[3] => op_or[3].IN1
entradaB[3] => op_xor[3].IN1
entradaB[3] => saidaOut.DATAB
entradaB[3] => Add1.IN5
entradaB[4] => Add0.IN12
entradaB[4] => op_and[4].IN1
entradaB[4] => op_or[4].IN1
entradaB[4] => op_xor[4].IN1
entradaB[4] => saidaOut.DATAB
entradaB[4] => Add1.IN4
entradaB[5] => Add0.IN11
entradaB[5] => op_and[5].IN1
entradaB[5] => op_or[5].IN1
entradaB[5] => op_xor[5].IN1
entradaB[5] => saidaOut.DATAB
entradaB[5] => Add1.IN3
entradaB[6] => Add0.IN10
entradaB[6] => op_and[6].IN1
entradaB[6] => op_or[6].IN1
entradaB[6] => op_xor[6].IN1
entradaB[6] => saidaOut.DATAB
entradaB[6] => Add1.IN2
entradaB[7] => Add0.IN9
entradaB[7] => op_and[7].IN1
entradaB[7] => op_or[7].IN1
entradaB[7] => op_xor[7].IN1
entradaB[7] => saidaOut.DATAB
entradaB[7] => Add1.IN1
seletor[0] => Equal0.IN2
seletor[0] => Equal1.IN0
seletor[0] => Equal2.IN2
seletor[0] => Equal3.IN1
seletor[0] => Equal4.IN2
seletor[0] => Equal5.IN1
seletor[0] => Equal6.IN2
seletor[0] => Equal7.IN2
seletor[1] => Equal0.IN1
seletor[1] => Equal1.IN2
seletor[1] => Equal2.IN0
seletor[1] => Equal3.IN0
seletor[1] => Equal4.IN1
seletor[1] => Equal5.IN2
seletor[1] => Equal6.IN1
seletor[1] => Equal7.IN1
seletor[2] => Equal0.IN0
seletor[2] => Equal1.IN1
seletor[2] => Equal2.IN1
seletor[2] => Equal3.IN2
seletor[2] => Equal4.IN0
seletor[2] => Equal5.IN0
seletor[2] => Equal6.IN0
seletor[2] => Equal7.IN0
saida[0] <= saidaOut.DB_MAX_OUTPUT_PORT_TYPE
saida[1] <= saidaOut.DB_MAX_OUTPUT_PORT_TYPE
saida[2] <= saidaOut.DB_MAX_OUTPUT_PORT_TYPE
saida[3] <= saidaOut.DB_MAX_OUTPUT_PORT_TYPE
saida[4] <= saidaOut.DB_MAX_OUTPUT_PORT_TYPE
saida[5] <= saidaOut.DB_MAX_OUTPUT_PORT_TYPE
saida[6] <= saidaOut.DB_MAX_OUTPUT_PORT_TYPE
saida[7] <= saidaOut.DB_MAX_OUTPUT_PORT_TYPE
flagZero <= Equal8.DB_MAX_OUTPUT_PORT_TYPE


|processador|arquitetura:arquitetura|flag:flag
in_flag => out_flag.IN0
hab_flag => out_flag.IN1
out_flag <= out_flag.DB_MAX_OUTPUT_PORT_TYPE


